/*******************************************************************************
 * Copyright 2014 Persistent Systems Ltd.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Azure.DataCenterMigration
{


  /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class StringResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal StringResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Azure.DataCenterMigration.StringResources", typeof(StringResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provided Data Center name &apos;{0}&apos; does not exist..
        /// </summary>
        public static string DCParamException {
            get {
                return ResourceManager.GetString("DCParamException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destination.
        /// </summary>
        public static string Destination {
            get {
                return ResourceManager.GetString("Destination", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generated new resource name contains duplicate Affinity Group Name(s)..
        /// </summary>
        public static string DuplicateAffinityGroupName {
            get {
                return ResourceManager.GetString("DuplicateAffinityGroupName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generated new resource name contains duplicate Dns Name(s)..
        /// </summary>
        public static string DuplicateDnsName {
            get {
                return ResourceManager.GetString("DuplicateDnsName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generated new resource name contains duplicate Local Network Name(s)..
        /// </summary>
        public static string DuplicateLocalNetworkName {
            get {
                return ResourceManager.GetString("DuplicateLocalNetworkName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generated new resource name contains duplicate Service Name(s)..
        /// </summary>
        public static string DuplicateServiceName {
            get {
                return ResourceManager.GetString("DuplicateServiceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generated new resource name contains duplicate Storage Account Name(s)..
        /// </summary>
        public static string DuplicateStorageAccount {
            get {
                return ResourceManager.GetString("DuplicateStorageAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generated new resource name contains duplicate Virtual Machine Name(s)..
        /// </summary>
        public static string DuplicateVirtualMachineName {
            get {
                return ResourceManager.GetString("DuplicateVirtualMachineName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generated new resource name contains duplicate Virtual Network Name(s)..
        /// </summary>
        public static string DuplicateVirtualNetworkName {
            get {
                return ResourceManager.GetString("DuplicateVirtualNetworkName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input parameter &apos;{0}&apos; value is null or empty..
        /// </summary>
        public static string EmptyOrNullParameter {
            get {
                return ResourceManager.GetString("EmptyOrNullParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception Occurred :  of type {0} : {1} {2}.
        /// </summary>
        public static string ExceptionOccurred {
            get {
                return ResourceManager.GetString("ExceptionOccurred", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export Metadata folder path does not exist..
        /// </summary>
        public static string ExportMetadataFolderPathParamException {
            get {
                return ResourceManager.GetString("ExportMetadataFolderPathParamException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import Metadata file does not exist..
        /// </summary>
        public static string ImportMetadataFilePathParamException {
            get {
                return ResourceManager.GetString("ImportMetadataFilePathParamException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insufficient space for Affinity Groups in destination subscription.
        /// </summary>
        public static string InsufficientAffinityGroups {
            get {
                return ResourceManager.GetString("InsufficientAffinityGroups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insufficient space for cloud services in destination subscription.
        /// </summary>
        public static string InsufficientCloudServices {
            get {
                return ResourceManager.GetString("InsufficientCloudServices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insufficient space for core counts in destination subscription.
        /// </summary>
        public static string InsufficientCores {
            get {
                return ResourceManager.GetString("InsufficientCores", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insufficient space for Dns servers in destination subscription.
        /// </summary>
        public static string InsufficientDnsServers {
            get {
                return ResourceManager.GetString("InsufficientDnsServers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insufficient space for local network sites in destination subscription.
        /// </summary>
        public static string InsufficientLocalNetwork {
            get {
                return ResourceManager.GetString("InsufficientLocalNetwork", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insufficient space for storage accounts in destination subscription.
        /// </summary>
        public static string InsufficientStorage {
            get {
                return ResourceManager.GetString("InsufficientStorage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insufficient space for virtual network sites in destination subscription.
        /// </summary>
        public static string InsufficientVirtualNetwork {
            get {
                return ResourceManager.GetString("InsufficientVirtualNetwork", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Affinity Group Name &apos;{0}&apos;. The name must start with a letter or a number. And, the name can contain only letters, numbers, and dashes..
        /// </summary>
        public static string InvalidAffinityGroupName {
            get {
                return ResourceManager.GetString("InvalidAffinityGroupName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Affinity Group Name &apos;{0}&apos; is already exist in this subscription..
        /// </summary>
        public static string InvalidAffinityGroupNameExist {
            get {
                return ResourceManager.GetString("InvalidAffinityGroupNameExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Affinity Group Name &apos;{0}&apos;. The Affinity Group Name cannot be longer than 63 characters..
        /// </summary>
        public static string InvalidAffinityGroupNameLength {
            get {
                return ResourceManager.GetString("InvalidAffinityGroupNameLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destination prefix name {0} must contain between 1 to 5 characters..
        /// </summary>
        public static string InvalidDestinationPrefixName {
            get {
                return ResourceManager.GetString("InvalidDestinationPrefixName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid DNS Server Name &apos;{0}&apos;. The DNS Server Name should be between 1 and 63 characters..
        /// </summary>
        public static string InvalidDNSServerLength {
            get {
                return ResourceManager.GetString("InvalidDNSServerLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS Server Name &apos;{0}&apos; is already exist in this subscription..
        /// </summary>
        public static string InvalidDNSServerNameExist {
            get {
                return ResourceManager.GetString("InvalidDNSServerNameExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MapperXmlFilePath must be xml file only. Please check the parameter value is xml file extension value..
        /// </summary>
        public static string InvalidExtensionMapperFile {
            get {
                return ResourceManager.GetString("InvalidExtensionMapperFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ImportMetadataFilePath must be json file only. Please check the parameter value is json file extension value..
        /// </summary>
        public static string InvalidExtensionMetadataFile {
            get {
                return ResourceManager.GetString("InvalidExtensionMetadataFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local Network Name &apos;{0}&apos; is already exist in this subscription..
        /// </summary>
        public static string InvalidLocalNetworkNameExist {
            get {
                return ResourceManager.GetString("InvalidLocalNetworkNameExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Local Network Name &apos;{0}&apos;. The Local Network Name should be between 1 and 63 characters..
        /// </summary>
        public static string InvalidLocalNetworkNameLength {
            get {
                return ResourceManager.GetString("InvalidLocalNetworkNameLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid value for parameter &apos;{0}&apos;..
        /// </summary>
        public static string InvalidParameterValue {
            get {
                return ResourceManager.GetString("InvalidParameterValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service Name &apos;{0}&apos; is already exist in this subscription..
        /// </summary>
        public static string InvalidServiceNameExist {
            get {
                return ResourceManager.GetString("InvalidServiceNameExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Service Name &apos;{0}&apos;. The Service Name cannot be longer than 63 characters..
        /// </summary>
        public static string InvalidServiceNameLength {
            get {
                return ResourceManager.GetString("InvalidServiceNameLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source data disk {0} does not exists..
        /// </summary>
        public static string InvalidSourceDataDiskBlob {
            get {
                return ResourceManager.GetString("InvalidSourceDataDiskBlob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source OS disk {0} does not exists..
        /// </summary>
        public static string InvalidSourceOSBlob {
            get {
                return ResourceManager.GetString("InvalidSourceOSBlob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Storage Account Name &apos;{0}&apos;. The name can contain only lowercase letters and numbers..
        /// </summary>
        public static string InvalidStorageAccount {
            get {
                return ResourceManager.GetString("InvalidStorageAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Storage Account Name &apos;{0}&apos;. The Storage Account Name should be between 3 and 24 characters long..
        /// </summary>
        public static string InvalidStorageAccountLength {
            get {
                return ResourceManager.GetString("InvalidStorageAccountLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Storage Account Name &apos;{0}&apos; is already exist in this subscription..
        /// </summary>
        public static string InvalidStorageAccountNameExist {
            get {
                return ResourceManager.GetString("InvalidStorageAccountNameExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid name {0}. The name  can contain only letters, numbers and hyphens. The first character in the field must be a letter..
        /// </summary>
        public static string InvalidValidNetwork {
            get {
                return ResourceManager.GetString("InvalidValidNetwork", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid service name {0}. Service name  can contain only letters, numbers, and hyphens. The first and last character in the field must be a letter or number. Trademarks, reserved words, and offensive words are not allowed.
        /// </summary>
        public static string InvalidValidServiceName {
            get {
                return ResourceManager.GetString("InvalidValidServiceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Virtual Machine Name &apos;{0}&apos; is already exist in this subscription..
        /// </summary>
        public static string InvalidVirtualMachineExist {
            get {
                return ResourceManager.GetString("InvalidVirtualMachineExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Virtual machine name &apos;{0}&apos; must contain between 3 and 15 characters..
        /// </summary>
        public static string InvalidVirtualMachineLength {
            get {
                return ResourceManager.GetString("InvalidVirtualMachineLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid virtual machine name {0}. virtual machine name can contain only letters, numbers, and hyphens. The name must start with a letter and must end with a letter or a number..
        /// </summary>
        public static string InvalidVirtualMachineName {
            get {
                return ResourceManager.GetString("InvalidVirtualMachineName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Virtual Network Name &apos;{0}&apos; is already exist in this subscription..
        /// </summary>
        public static string InvalidVirtualNetworkNameExist {
            get {
                return ResourceManager.GetString("InvalidVirtualNetworkNameExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Virtual Network Name &apos;{0}&apos;. The Virtual Network Name should be between 1 and 63 characters..
        /// </summary>
        public static string InvalidVirtualNetworkNameLength {
            get {
                return ResourceManager.GetString("InvalidVirtualNetworkNameLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to parse the file &apos;{0}&apos;..
        /// </summary>
        public static string JsonParsingException {
            get {
                return ResourceManager.GetString("JsonParsingException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mapper Xml file does not exist..
        /// </summary>
        public static string MapperFilePathParamException {
            get {
                return ResourceManager.GetString("MapperFilePathParamException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Certificate with Thumbprint &apos;{0}&apos; could not be located..
        /// </summary>
        public static string MissingCertificate {
            get {
                return ResourceManager.GetString("MissingCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Either publish setting file or certificate file should be selected for {0} in &apos;{1}&apos;.
        /// </summary>
        public static string MissingCredentialsFile {
            get {
                return ResourceManager.GetString("MissingCredentialsFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Either destination prefix or mapper xml file path should be set for {0} in &apos;{1}&apos;.
        /// </summary>
        public static string MissingMapperAndPrefix {
            get {
                return ResourceManager.GetString("MissingMapperAndPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate with {0}Thumbprint &apos;{1}&apos; in the certificate store should contain the private key..
        /// </summary>
        public static string MissingPrivateKeyInCertificate {
            get {
                return ResourceManager.GetString("MissingPrivateKeyInCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required parameter &apos;{0}&apos; is missing. Define parameter in &apos;{1}&apos; ..
        /// </summary>
        public static string MissingRequiredParameter {
            get {
                return ResourceManager.GetString("MissingRequiredParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publish Settings file does not exist..
        /// </summary>
        public static string PublishSettingsFilePathParamException {
            get {
                return ResourceManager.GetString("PublishSettingsFilePathParamException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ResourceNotFound: No deployments were found..
        /// </summary>
        public static string ResourceNotFoundException {
            get {
                return ResourceManager.GetString("ResourceNotFoundException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source.
        /// </summary>
        public static string Source {
            get {
                return ResourceManager.GetString("Source", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Provided Subscription Id &apos;{0}&apos; does not exists in &apos;{1}&apos;.
        /// </summary>
        public static string SubscriptionIdParamException {
            get {
                return ResourceManager.GetString("SubscriptionIdParamException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to parse the file &apos;{0}&apos;..
        /// </summary>
        public static string XMLParsingException {
            get {
                return ResourceManager.GetString("XMLParsingException", resourceCulture);
            }
        }
    }
}
